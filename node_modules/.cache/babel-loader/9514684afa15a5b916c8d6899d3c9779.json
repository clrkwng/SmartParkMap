{"ast":null,"code":"import _assertThisInitialized from \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Wei\\\\Desktop\\\\SmartParkWebApp\\\\SmartParkMap\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as parkData from \"./data/parking_meters.json\";\nimport mapStyles from \"./mapStyles\";\nimport Geocode from \"react-geocode\";\nimport KDBush from 'kdbush';\nvar API_KEY = 'AIzaSyCcq9sfKruEgeckm_yRwLmBdkOFCSQ3SLA';\nGeocode.setApiKey(API_KEY);\nvar meterKD = new KDBush(parkData, function (p) {\n  return p.lat;\n}, function (p) {\n  return p.long;\n}, 100000, Int32Array);\n\nfunction Map(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedPark = _useState2[0],\n      setSelectedPark = _useState2[1];\n\n  useEffect(function () {\n    var listener = function listener(e) {\n      if (e.key === \"Escape\") {\n        setSelectedPark(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return function () {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return React.createElement(GoogleMap, {\n    defaultZoom: 10,\n    defaultCenter: this.props.point,\n    defaultOptions: {\n      styles: mapStyles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, thisExpression.props.results.map(function (park) {\n    return React.createElement(Marker, {\n      key: park.meter_number,\n      position: {\n        lat: park.lat,\n        lng: park.long\n      },\n      onClick: function onClick() {\n        setSelectedPark(park);\n      },\n      icon: {\n        url: \"/parking_meter.svg\",\n        scaledSize: new window.google.maps.Size(40, 40)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }), selectedPark && React.createElement(InfoWindow, {\n    onCloseClick: function onCloseClick() {\n      setSelectedPark(null);\n    },\n    position: {\n      lat: selectedPark.geometry.coordinates[1],\n      lng: selectedPark.geometry.coordinates[0]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, selectedPark.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, selectedPark.properties.DESCRIPTION))));\n}\n\nvar MapWrapped = withScriptjs(withGoogleMap(Map));\nexport function MapDisplay() {\n  return React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"80vw\",\n      height: \"80vh\",\n      display: \"inline-block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(MapWrapped, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=\".concat(API_KEY) //   ${process.env.REACT_APP_GOOGLE_KEY}\n    // `}\n    ,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n}\nvar radius = .01;\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchPage, _React$Component);\n\n  function SearchPage(props) {\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n    _this.state = {\n      point: {\n        lat: 39.961178,\n        lng: -82.998795\n      },\n      results: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"findResults\",\n    value: function findResults(address) {\n      var _Geocode$fromAddress$ = Geocode.fromAddress(address).then(function (response) {\n        console.log('retrieved');\n        var _response$results$0$g = response.results[0].geometry.location,\n            lat = _response$results$0$g.lat,\n            lng = _response$results$0$g.lng;\n        return {\n          lat: lat,\n          lng: lng\n        };\n      }, function (error) {\n        console.log('error');\n        console.error(error);\n      }),\n          lat = _Geocode$fromAddress$.lat,\n          lng = _Geocode$fromAddress$.lng;\n\n      var results = meterKD.within(lat, lng, radius).map(function (id) {\n        return parkData.features[id];\n      });\n      this.setState({\n        point: {\n          lat: lat,\n          lng: lng\n        },\n        results: results\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(TitleBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        findResults: this.findResults,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(MapDisplay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchPage;\n}(React.Component);\n\nexport { SearchPage as default };\n\nvar TitleBar =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TitleBar, _React$Component2);\n\n  function TitleBar() {\n    _classCallCheck(this, TitleBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TitleBar).apply(this, arguments));\n  }\n\n  _createClass(TitleBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"titleBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontSize: \"xx-large\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Honda SmartPark\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TitleBar;\n}(React.Component);\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(SearchBar, _React$Component3);\n\n  function SearchBar(props) {\n    var _this2;\n\n    _classCallCheck(this, SearchBar);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n    _this2.state = {\n      value: '',\n      prevValue: ''\n    };\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_this2));\n    _this2.handleSubmit = _this2.handleSubmit.bind(_assertThisInitialized(_this2));\n    _this2.onSubmit = _this2.props.findResults;\n    return _this2;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      if (this.state.prevValue !== this.state.value) {\n        this.onSubmit(this.state.value);\n        this.setState({\n          prevValue: this.state.value\n        });\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Search\")));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nvar TimeBar =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(TimeBar, _React$Component4);\n\n  function TimeBar() {\n    _classCallCheck(this, TimeBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TimeBar).apply(this, arguments));\n  }\n\n  return TimeBar;\n}(React.Component);\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$Component5) {\n  _inherits(Menu, _React$Component5);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Menu).apply(this, arguments));\n  }\n\n  _createClass(Menu, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Menu\");\n    }\n  }]);\n\n  return Menu;\n}(React.Component);","map":{"version":3,"sources":["C:/Users/Wei/Desktop/SmartParkWebApp/SmartParkMap/src/App.js"],"names":["React","useState","useEffect","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","parkData","mapStyles","Geocode","KDBush","API_KEY","setApiKey","meterKD","p","lat","long","Int32Array","Map","props","selectedPark","setSelectedPark","listener","e","key","window","addEventListener","removeEventListener","point","styles","thisExpression","results","map","park","meter_number","lng","url","scaledSize","google","maps","Size","geometry","coordinates","properties","NAME","DESCRIPTION","MapWrapped","MapDisplay","textAlign","width","height","display","radius","SearchPage","state","address","fromAddress","then","response","console","log","location","error","within","id","features","setState","findResults","Component","TitleBar","fontSize","SearchBar","value","prevValue","handleChange","bind","handleSubmit","onSubmit","event","target","preventDefault","TimeBar","Menu"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  withScriptjs,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport * as parkData from \"./data/parking_meters.json\";\r\nimport mapStyles from \"./mapStyles\";\r\nimport Geocode from \"react-geocode\";\r\nimport KDBush from 'kdbush';\r\n\r\nconst API_KEY = 'AIzaSyCcq9sfKruEgeckm_yRwLmBdkOFCSQ3SLA';\r\nGeocode.setApiKey(API_KEY);\r\n\r\nconst meterKD = new KDBush(parkData, p =>p.lat, p=>p.long, 100000, Int32Array);\r\n\r\nfunction Map(props) {\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const listener = e => {\r\n      if (e.key === \"Escape\") {\r\n        setSelectedPark(null);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", listener);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={10}\r\n      defaultCenter={this.props.point}\r\n      defaultOptions={{ styles: mapStyles }}\r\n    >\r\n      {thisExpression.props.results.map(park => (\r\n        <Marker\r\n          key={park.meter_number}\r\n          position={{\r\n            lat: park.lat,\r\n            lng: park.long\r\n          }}\r\n          onClick={() => {\r\n            setSelectedPark(park);\r\n          }}\r\n          icon={{\r\n            url: `/parking_meter.svg`,\r\n            scaledSize: new window.google.maps.Size(40, 40)\r\n          }}\r\n        />\r\n      ))}\r\n\r\n      {selectedPark && (\r\n        <InfoWindow\r\n          onCloseClick={() => {\r\n            setSelectedPark(null);\r\n          }}\r\n          position={{\r\n            lat: selectedPark.geometry.coordinates[1],\r\n            lng: selectedPark.geometry.coordinates[0]\r\n          }}\r\n        >\r\n          <div>\r\n            <h2>{selectedPark.properties.NAME}</h2>\r\n            <p>{selectedPark.properties.DESCRIPTION}</p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\r\n\r\nexport function MapDisplay() {\r\n  return (\r\n    <div style={{ textAlign:\"center\" }}>\r\n    <div style={{ width: \"80vw\", height: \"80vh\", display:\"inline-block\" }}>\r\n      <MapWrapped\r\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${API_KEY}`}\r\n        //   ${process.env.REACT_APP_GOOGLE_KEY}\r\n        // `}\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `100%` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst radius = .01;\r\n\r\nexport default class SearchPage extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          point: { lat: 39.961178, lng: -82.998795},\r\n          results: []\r\n      };\r\n  }\r\n\r\n  findResults(address) {\r\n    const {lat, lng} = Geocode.fromAddress(address).then(\r\n      response => {\r\n        console.log('retrieved');\r\n        const {lat, lng} = response.results[0].geometry.location;\r\n        return {lat, lng}\r\n      },\r\n      error => {\r\n        console.log('error');\r\n        console.error(error);\r\n      }\r\n    );\r\n    const results = meterKD.within(lat, lng, radius).map(id => parkData.features[id]);\r\n    this.setState({\r\n      point: {lat,lng},\r\n      results: results});    \r\n  }\r\n  \r\n  render() {\r\n      return (\r\n          <div>\r\n              <div>\r\n                  <TitleBar/>\r\n              </div>\r\n              <div>\r\n                  <SearchBar findResults={this.findResults}/>\r\n              </div>\r\n              <div>\r\n                <MapDisplay/>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nclass TitleBar extends React.Component {\r\n  render() {\r\n      return (\r\n          <div className = \"titleBar\">\r\n              <div style={{ fontSize:\"xx-large\" }}>\r\n                Honda SmartPark\r\n              </div>\r\n              <div>\r\n                  <Menu/>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: '',\r\n        prevValue: ''\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.onSubmit = this.props.findResults;\r\n  }\r\n\r\n  handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n      if (this.state.prevValue !== this.state.value) {\r\n        this.onSubmit(this.state.value);\r\n        this.setState({prevValue: this.state.value})\r\n      }\r\n      event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div>\r\n              <form onSubmit={this.handleSubmit}>\r\n                  <input type=\"text\"  value={this.state.value} onChange={this.handleChange} />\r\n                  <button onClick={this.handleSubmit}>\r\n                    Search\r\n                  </button>\r\n              </form>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nclass TimeBar extends React.Component {\r\n\r\n}\r\n\r\nclass Menu extends React.Component {\r\n  render() {\r\n      return (\r\n          <div>\r\n              {\"Menu\"}\r\n          </div>\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}